<infinispan
        xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
        xsi:schemaLocation="urn:infinispan:config:10.0 http://www.infinispan.org/schemas/infinispan-config-10.0.xsd
                            urn:infinispan:server:10.0 http://www.infinispan.org/schemas/infinispan-server-10.0.xsd"
        xmlns="urn:infinispan:config:10.0"
        xmlns:server="urn:infinispan:server:10.0"
        xmlns:gsp='http://groovy.codehaus.org/2005/gsp'>

    <gsp:scriptlet>
        def bindAddress = InetAddress.localHost.hostAddress
        def stack = "${jgroups.dnsPing.query}" ? "image-${jgroups.transport}" : "dns-ping-${jgroups.transport}"
        def stackPosition = "${jgroups.transport}" == "udp" ? "PING" : "MPING"
    </gsp:scriptlet>

    <jgroups>
        <stack-file name="image-${jgroups.transport}" path="jgroups/${jgroups.transport}.xml"/>

        <gsp:scriptlet>
            if ("${jgroups.dnsPing.query}" != "null") {
        </gsp:scriptlet>

        <stack name="dns-ping-${jgroups.transport}" extends="image-${jgroups.transport}">
            <dns.DNS_PING dns_address="${jgroups.dnsPing.address}" dns_query="${jgroups.dnsPing.query}"
                          dns_record_type="${jgroups.dnsPing.recordType}" stack.combine="REPLACE"
                          stack.position="${stackPosition}"/>
        </stack>

        <gsp:scriptlet>
            }
        </gsp:scriptlet>
    </jgroups>

    <cache-container>
        <transport cluster="${infinispan.clusterName}" stack="${stack}"/>
    </cache-container>

    <server xmlns="urn:infinispan:server:10.0">
        <interfaces>
            <interface name="public">
                <inet-address value="${bindAddress}"/>
            </interface>
        </interfaces>

        <socket-bindings default-interface="public" port-offset="0">
            <socket-binding name="default" port="11222"/>
            <socket-binding name="memcached" port="11221"/>
        </socket-bindings>

        <security>
            <security-realms>
                <security-realm name="default">
                    <properties-realm groups-attribute="Roles">
                        <user-properties path="users.properties" relative-to="infinispan.server.config.path"
                                         plain-text="true"/>
                        <group-properties path="groups.properties" relative-to="infinispan.server.config.path"/>
                    </properties-realm>
                    <!-- ##SERVER_IDENTITIES## -->
                </security-realm>
            </security-realms>
        </security>

        <endpoints socket-binding="default" security-realm="default">
            <hotrod-connector name="hotrod"/>
            <rest-connector name="rest"/>
            <memcached-connector socket-binding="memcached" />
        </endpoints>
    </server>
</infinispan>