name: Test

on:
  push:
    branches:
      - 14.0.x
      - main
  pull_request:
    branches:
      - 14.0.x
      - main

concurrency:
  group: ${{ github.head_ref || github.ref_name }} 
  cancel-in-progress: true


jobs:
  images:
    runs-on: ubuntu-latest

    strategy:
      fail-fast: false
      matrix:
        # descriptor: [server-openjdk, server-native, cli]
        descriptor: [server-openjdk]
        os: [ubuntu-latest, macos-14]

    env:
      IMAGE: ${{ matrix.descriptor == 'server-openjdk' && 'server' || matrix.descriptor }}
      ARCH: ${{ matrix.os == 'ubuntu-latest' && 'amd64' || 'arm64' }}

    steps:
    - uses: actions/checkout@v4

    - name: Install CEKit
      uses: cekit/actions-setup-cekit@v1.1.5

    - name: Define Env
      run: |
        echo "TAG=${{ env.ARCH }}-latest" >> $GITHUB_ENV
        echo "TAR=/tmp/${{ matrix.descriptor }}-${{ env.ARCH }}.tar" >> $GITHUB_ENV

    - name: Create dockerfile
      run: |
        cekit -v --descriptor ${{ matrix.descriptor }}.yaml build --overrides "{\"version\": \"$TAG\"}" --dry-run docker

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
      with:
        driver-opts: network=host

    - name: Build
      uses: docker/build-push-action@v3
      with:
        context: ./target/image
        platforms: linux/${{ env.ARCH }}
        file: target/image/Dockerfile
        tags: localhost:5000/infinispan/${{ env.IMAGE }}:${{ env.TAG }}
        outputs: type=docker,dest=${{ env.TAR }}

    - name: Upload
      uses: actions/upload-artifact@v4
      with:
        name: ${{ matrix.descriptor }}-${{ env.ARCH }}
        path: ${{ env.TAR }}

  manifests:
    needs: images
    runs-on: ubuntu-latest

    services:
      registry:
        image: registry:2
        ports:
          - 5000:5000

    steps:
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Download Component Images
        uses: actions/download-artifact@v4
        with:
          path: .
          pattern: "*"
          merge-multiple: true

      # TODO remove
      - run: ls -R

      - name: Load images
        run: |
          docker load --input server-openjdk-arm64.tar
          docker load --input server-openjdk-amd64.tar
          docker push localhost:5000/infinispan/server:amd64-latest
          docker push localhost:5000/infinispan/server:arm64-latest

      - name: Create manifest
        run: |
          docker manifest create --insecure localhost:5000/infinispan/server:latest \
            localhost:5000/infinispan/server:amd64-latest \
            localhost:5000/infinispan/server:arm64-latest
          
          docker manifest inspect --verbose localhost:5000/infinispan/server:latest


      - name: Push
        run: docker manifest push localhost:5000/infinispan/server:latest
